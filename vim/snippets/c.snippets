# quicktest()
snippet inc
	#include <${1:stdio}.h>${2}
snippet main
	int main(int argc, const char *argv[]) {
		${1}
		return 0;
	}

# #ifndef ... #define ... #endif
snippet #ifndef
	#ifndef $1
	#define ${1:SYMBOL} ${2:value}
	#endif${3}
snippet #ifdef
	#ifdef ${1:FOO}
		${2:#define }
	#endif
snippet #if
	#if ${1:FOO}
		${2}
	#endif

# If Condition
snippet if
	if (${1:/* condition */}) {
		${2:/* code */}
	}${3}
# Do While Loop
snippet do
	do {
		${2:/* code */}
	} while (${1:/* condition */})${3:;}${4}
# While Loop
snippet while
	while (${1:/* condition */}) {
		${2:/* code */}
	}${3}
# For Loop
snippet for
	for (${2:i} = 0; $2 < ${1:count}; $2${3:++}) {
		${4:/* code */}
	}${5}

# Struct
snippet struct
	struct ${1:`Filename('$1_t', 'name')`} {
		${2:/* data */}
	}${3: /* optional variable list */}${4:;}${5}
snippet enum
	enum {
		${1:/* data */}
	} ${2:foo};

# printf
# snippet pp
#	printf (__FILE__ ":%d %s %s %s", __LINE__, "\033[0;42m", ${2:/*highlight*/} "\033[m\n")${3:;}${4}
snippet printf
	printf ("${1:%s}\n"${2})${3:;}${4}
snippet pp
	printf (__FILE__ ":%d %s ${1:/*blabla*/} %s", __LINE__, "\033[0;42m", ${2:/*highlight*/} "\033[m\n")${3:;}${4}
snippet ps
	{ char *s; asprintf(&s, "logger -i -t swa -- '%s:%d %${1:s}'", __FILE__, __LINE__, ${2:""}); system(s); free(s);${3} }
snippet assert
	assert (${1})${2:;}${3}
snippet fprintf
	fprintf(${1:stderr}, "${2:%s}\n"${3})${4:;}${5}

snippet pg
	{ char *s; asprintf(&s, "logger -i -t PG71142 -- '%s:%d %${1:s}'", __FILE__, __LINE__, ${2:""}); system(s); free(s);${3} }
