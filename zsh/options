# vim:set syntax=zsh:

autoload zsh/terminfo
autoload -U zed
autoload -U compinit && compinit
autoload -U insert-files && zle -N insert-files
autoload -U copy-earlier-word && zle -N copy-earlier-word
autoload -U edit-command-line && zle -N edit-command-line

zmodload -i zsh/complist
zmodload -i zsh/deltochar
zmodload -i zsh/mathfunc
zmodload -a zsh/stat stat
zmodload -a zsh/zpty zpty
zmodload -a zsh/zprof zprof
zmodload -a zsh/mapfile mapfile

setopt AUTO_PUSHD
setopt AUTO_CD
setopt CDABLE_VARS
setopt PROMPT_SUBST
setopt PUSHD_MINUS
setopt PUSHD_SILENT
setopt PUSHD_TO_HOME
setopt PUSHD_IGNOREDUPS
setopt HIST_IGNORE_ALL_DUPS
setopt HIST_SAVE_NO_DUPS
setopt SHARE_HISTORY
setopt FLOW_CONTROL         # don't ignore ^S/^Q
setopt LONGLISTJOBS         # display PID when suspending processes as well
setopt NOTIFY               # report the status of backgrounds jobs immediately
setopt COMPLETEINWORD       # not just at the end
setopt EXTENDEDGLOB         # 扩展文件名匹配功能

autoload zkbd
function zkbd_file() {
    [[ -f ~/.zsh/zkbd/${TERM}-${VENDOR}-${OSTYPE} ]] && printf '%s' ~/".zsh/zkbd/${TERM}-${VENDOR}-${OSTYPE}" && return 0
    [[ -f ~/.zsh/zkbd/${TERM}-${DISPLAY}          ]] && printf '%s' ~/".zsh/zkbd/${TERM}-${DISPLAY}"          && return 0
    return 1
}

[[ ! -d ~/.zsh/zkbd ]] && mkdir -p ~/.zsh/zkbd
keyfile=$(zkbd_file)
ret=$?
if [[ ${ret} -ne 0 ]]; then
    zkbd
    keyfile=$(zkbd_file)
    ret=$?
fi
if [[ ${ret} -eq 0 ]] ; then
    source "${keyfile}"
else
    printf 'Failed to setup keys using zkbd.\n'
fi
unfunction zkbd_file; unset keyfile ret

